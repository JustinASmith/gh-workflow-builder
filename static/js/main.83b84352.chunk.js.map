{"version":3,"sources":["components/SvgAssets.js","data/initial-elements.js","components/FlowView.js","components/SidebarItem.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["eventSvg","version","xmlns","width","height","viewBox","className","d","stepsSvg","buildSvg","deploySvg","enlargeSvg","initialElements","id","type","data","label","class","position","x","y","style","background","color","border","source","target","stroke","animated","autoPlay","EASING","Easing","Quadratic","Out","onDragOver","event","preventDefault","dataTransfer","dropEffect","getId","FlowView","useState","elements","setElements","reactFlowInstance","setReactFlowInstance","handleTransform","useCallback","transform","toObject","zoom","Tween","to","easing","on","setTransform","start","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","onLoad","_reactFlowInstance","onDrop","getData","ghType","title","subtitle","project","clientX","clientY","newNode","es","concat","defaultZoom","defaultPosition","nodeStrokeColor","n","nodeColor","nodeBorderRadius","onClick","gap","tabindex","SidebarItem","onDragStart","nodeType","setData","effectAllowed","draggable","Sidebar","name","placeholder","autoComplete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83b84352.chunk.js","sourcesContent":["const eventSvg = (\r\n  <svg\r\n    version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 32 32\"\r\n  >\r\n    <title>power</title>\r\n    <path\r\n      className=\"fill-current text-yellow-400\"\r\n      d=\"M12 0l-12 16h12l-8 16 28-20h-16l12-12z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nconst stepsSvg = (\r\n  <svg\r\n    version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 32 32\"\r\n  >\r\n    <title>list-numbered</title>\r\n    <path\r\n      className=\"fill-current text-indigo-400\"\r\n      d=\"M12 26h20v4h-20zM12 14h20v4h-20zM12 2h20v4h-20zM6 0v8h-2v-6h-2v-2zM4 16.438v1.563h4v2h-6v-4.563l4-1.875v-1.563h-4v-2h6v4.563zM8 22v10h-6v-2h4v-2h-4v-2h4v-2h-4v-2z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nconst buildSvg = (\r\n  <svg\r\n    version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 32 32\"\r\n  >\r\n    <title>cogs</title>\r\n    <path\r\n      className=\"fill-current text-gray-400\"\r\n      d=\"M11.366 22.564l1.291-1.807-1.414-1.414-1.807 1.291c-0.335-0.187-0.694-0.337-1.071-0.444l-0.365-2.19h-2l-0.365 2.19c-0.377 0.107-0.736 0.256-1.071 0.444l-1.807-1.291-1.414 1.414 1.291 1.807c-0.187 0.335-0.337 0.694-0.443 1.071l-2.19 0.365v2l2.19 0.365c0.107 0.377 0.256 0.736 0.444 1.071l-1.291 1.807 1.414 1.414 1.807-1.291c0.335 0.187 0.694 0.337 1.071 0.444l0.365 2.19h2l0.365-2.19c0.377-0.107 0.736-0.256 1.071-0.444l1.807 1.291 1.414-1.414-1.291-1.807c0.187-0.335 0.337-0.694 0.444-1.071l2.19-0.365v-2l-2.19-0.365c-0.107-0.377-0.256-0.736-0.444-1.071zM7 27c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM32 12v-2l-2.106-0.383c-0.039-0.251-0.088-0.499-0.148-0.743l1.799-1.159-0.765-1.848-2.092 0.452c-0.132-0.216-0.273-0.426-0.422-0.629l1.219-1.761-1.414-1.414-1.761 1.219c-0.203-0.149-0.413-0.29-0.629-0.422l0.452-2.092-1.848-0.765-1.159 1.799c-0.244-0.059-0.492-0.109-0.743-0.148l-0.383-2.106h-2l-0.383 2.106c-0.251 0.039-0.499 0.088-0.743 0.148l-1.159-1.799-1.848 0.765 0.452 2.092c-0.216 0.132-0.426 0.273-0.629 0.422l-1.761-1.219-1.414 1.414 1.219 1.761c-0.149 0.203-0.29 0.413-0.422 0.629l-2.092-0.452-0.765 1.848 1.799 1.159c-0.059 0.244-0.109 0.492-0.148 0.743l-2.106 0.383v2l2.106 0.383c0.039 0.251 0.088 0.499 0.148 0.743l-1.799 1.159 0.765 1.848 2.092-0.452c0.132 0.216 0.273 0.426 0.422 0.629l-1.219 1.761 1.414 1.414 1.761-1.219c0.203 0.149 0.413 0.29 0.629 0.422l-0.452 2.092 1.848 0.765 1.159-1.799c0.244 0.059 0.492 0.109 0.743 0.148l0.383 2.106h2l0.383-2.106c0.251-0.039 0.499-0.088 0.743-0.148l1.159 1.799 1.848-0.765-0.452-2.092c0.216-0.132 0.426-0.273 0.629-0.422l1.761 1.219 1.414-1.414-1.219-1.761c0.149-0.203 0.29-0.413 0.422-0.629l2.092 0.452 0.765-1.848-1.799-1.159c0.059-0.244 0.109-0.492 0.148-0.743l2.106-0.383zM21 15.35c-2.402 0-4.35-1.948-4.35-4.35s1.948-4.35 4.35-4.35 4.35 1.948 4.35 4.35c0 2.402-1.948 4.35-4.35 4.35z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nconst deploySvg = (\r\n  <svg\r\n    version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 32 32\"\r\n  >\r\n    <title>rocket</title>\r\n    <path\r\n      className=\"fill-current text-green-500\"\r\n      d=\"M22 2l-10 10h-6l-6 8c0 0 6.357-1.77 10.065-0.94l-10.065 12.94 13.184-10.255c1.839 4.208-1.184 10.255-1.184 10.255l8-6v-6l10-10 2-10-10 2z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nconst enlargeSvg = (\r\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n    <title>enlarge</title>\r\n    <path d=\"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"></path>\r\n    <path d=\"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"></path>\r\n    <path d=\"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"></path>\r\n    <path d=\"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport {\r\n  eventSvg,\r\n  stepsSvg,\r\n  buildSvg,\r\n  deploySvg,\r\n  enlargeSvg\r\n};","import React from 'react';\r\nimport {\r\n  eventSvg,\r\n  stepsSvg,\r\n  buildSvg,\r\n  deploySvg,\r\n} from \"../components/SvgAssets\";\r\n\r\nconst initialElements = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: {\r\n      label: (\r\n        <>\r\n          <div class=\"flex flex-row justify-start\">\r\n            <span class=\"mr-2 mb-2\">\r\n              {eventSvg}\r\n            </span>\r\n            <strong>Pull Request</strong>\r\n          </div>\r\n          When a new pull request targets the main branch\r\n        </>\r\n      ),\r\n    },\r\n    position: { x: 0, y: -50 },\r\n    style: {\r\n      background: \"#1F2937\",\r\n      color: \"#eee\",\r\n      border: \"1px solid #F59E0B \",\r\n      width: 175,\r\n    },\r\n  },\r\n  {\r\n    id: '2',\r\n    data: {\r\n      label: (\r\n        <>\r\n          <div class=\"flex flex-col justify-start\">\r\n            {/* <span class=\"mr-2 mb-2\">{stepsSvg}</span> */}\r\n            <span>Step:</span>\r\n            <strong>Automated Tests</strong>\r\n            Runs automated test suite\r\n          </div>\r\n        </>\r\n      ),\r\n    },\r\n    position: { x: 50, y: 100 },\r\n    style: {\r\n      background: \"#1F2937\",\r\n      color: \"#eee\",\r\n      border: \"1px solid #818CF8 \",\r\n      width: 175,\r\n    },\r\n  },\r\n  {\r\n    id: '3',\r\n    position: { x: 75, y: 250 },\r\n    data: {\r\n      label: (\r\n        <>\r\n          <div class=\"flex flex-row justify-start\">\r\n            <span class=\"mr-2 mb-2\">{buildSvg}</span>\r\n            <strong>Node.js</strong>\r\n          </div>\r\n          Build Node.js project using Webpack or Rollup\r\n        </>\r\n      ),\r\n    },\r\n    style: {\r\n      background: \"#1F2937\",\r\n      color: \"#eee\",\r\n      border: \"1px solid #9CA3AF \",\r\n      width: 175,\r\n    },\r\n  },\r\n  {\r\n    id: '4',\r\n    type: 'output',\r\n    data: {\r\n      label: (\r\n        <>\r\n          <div class=\"flex flex-row justify-start\">\r\n            <span class=\"mr-2 mb-2\">{deploySvg}</span>\r\n            <strong>GitHub Pages</strong>\r\n          </div>\r\n          Deploy project to GitHub Pages\r\n        </>\r\n      ),\r\n    },\r\n    style: {\r\n      background: \"#1F2937\",\r\n      color: \"#eee\",\r\n      border: \"1px solid #10B981 \",\r\n      width: 175,\r\n    },\r\n    position: { x: 50, y: 375 },\r\n  },\r\n  { id: 'e1-2', source: '1', target: '2'},\r\n  {\r\n    id: 'e2-3',\r\n    source: '2',\r\n    target: '3',\r\n    style: { stroke: '#818CF8' },\r\n    animated: true,\r\n  },\r\n  {\r\n    id: 'e3-4',\r\n    source: '3',\r\n    target: '4',\r\n    style: { stroke: '#9CA3AF' },\r\n    animated: true,\r\n  },\r\n];\r\n\r\nexport default initialElements;","import React, { useState, useCallback } from \"react\";\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n} from \"react-flow-renderer\";\r\nimport { Easing, Tween, autoPlay } from \"es6-tween\";\r\n\r\n// import localforage from \"localforage\";\r\nimport initialElements from \"../data/initial-elements\";\r\nimport {\r\n  eventSvg,\r\n  stepsSvg,\r\n  buildSvg,\r\n  deploySvg,\r\n  enlargeSvg,\r\n} from \"../components/SvgAssets\";\r\n\r\nautoPlay(true);\r\nconst TRANSITION_TIME = 300;\r\nconst EASING = Easing.Quadratic.Out;\r\nlet flowKey = \"gh-workflow-builder\";\r\n\r\nconst onDragOver = (event) => {\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = \"move\";\r\n};\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst FlowView = () => {\r\n  const [elements, setElements] = useState(initialElements);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState();\r\n\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const handleTransform = useCallback(\r\n    (transform) => () => {\r\n      const {\r\n        position: [x, y],\r\n        zoom,\r\n      } = reactFlowInstance.toObject();\r\n\r\n      new Tween({ x: x, y: y, zoom })\r\n        .to(transform, TRANSITION_TIME)\r\n        .easing(EASING)\r\n        .on(\"update\", ({ x, y, zoom }) =>\r\n          reactFlowInstance.setTransform({ x, y, zoom })\r\n        )\r\n        .start();\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (reactFlowInstance) {\r\n      const type = event.dataTransfer.getData(\"application/reactflow\");\r\n      const ghType = event.dataTransfer.getData(\"application/ghtype\");\r\n      const title = event.dataTransfer.getData(\"application/title\");\r\n      const subtitle = event.dataTransfer.getData(\"application/subtitle\");\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - 350,\r\n        y: event.clientY - 25,\r\n      });\r\n      if (type === \"input\" && ghType === \"event\") {\r\n        const newNode = {\r\n          id: getId(),\r\n          type,\r\n          position,\r\n          data: {\r\n            label: (\r\n              <>\r\n                <div class=\"flex flex-row justify-start\">\r\n                  <span class=\"mr-2 mb-2\">{eventSvg}</span>\r\n                  <strong>{title}</strong>\r\n                </div>\r\n                {subtitle}\r\n              </>\r\n            ),\r\n          },\r\n          style: {\r\n            background: \"#1F2937\",\r\n            color: \"#eee\",\r\n            border: \"1px solid #F59E0B \",\r\n            width: 175,\r\n          },\r\n        };\r\n        setElements((es) => es.concat(newNode));\r\n      } else if (type === \"default\" && ghType === \"step\") {\r\n        const newNode = {\r\n          id: getId(),\r\n          type,\r\n          position,\r\n          data: {\r\n            label: (\r\n              <>\r\n                <div class=\"flex flex-col justify-start\">\r\n                  {/* <span class=\"mr-2 mb-2\">{stepsSvg}</span> */}\r\n                  <span>Step:</span>\r\n                  <strong>{title}</strong>\r\n                  {subtitle}\r\n                </div>\r\n              </>\r\n            ),\r\n          },\r\n          style: {\r\n            background: \"#1F2937\",\r\n            color: \"#eee\",\r\n            border: \"1px solid #818CF8 \",\r\n            width: 175,\r\n          },\r\n        };\r\n        setElements((es) => es.concat(newNode));\r\n      } else if (type === \"default\" && ghType === \"build\") {\r\n        const newNode = {\r\n          id: getId(),\r\n          type,\r\n          position,\r\n          data: {\r\n            label: (\r\n              <>\r\n                <div class=\"flex flex-row justify-start\">\r\n                  <span class=\"mr-2 mb-2\">{buildSvg}</span>\r\n                  <strong>{title}</strong>\r\n                </div>\r\n                {subtitle}\r\n              </>\r\n            ),\r\n          },\r\n          style: {\r\n            background: \"#1F2937\",\r\n            color: \"#eee\",\r\n            border: \"1px solid #9CA3AF \",\r\n            width: 175,\r\n          },\r\n        };\r\n        setElements((es) => es.concat(newNode));\r\n      } else if (type === \"output\" && ghType === \"deploy\") {\r\n        const newNode = {\r\n          id: getId(),\r\n          type,\r\n          position,\r\n          data: {\r\n            label: (\r\n              <>\r\n                <div class=\"flex flex-row justify-start\">\r\n                  <span class=\"mr-2 mb-2\">{deploySvg}</span>\r\n                  <strong>{title}</strong>\r\n                </div>\r\n                {subtitle}\r\n              </>\r\n            ),\r\n          },\r\n          style: {\r\n            background: \"#1F2937\",\r\n            color: \"#eee\",\r\n            border: \"1px solid #10B981 \",\r\n            width: 175,\r\n          },\r\n        };\r\n        setElements((es) => es.concat(newNode));\r\n      }\r\n    }\r\n  };\r\n\r\n  // TODO: Come back to saving\r\n  // const onSave = useCallback(() => {\r\n  //   if (reactFlowInstance) {\r\n  //     const flow = reactFlowInstance.toObject();\r\n  //     localforage.setItem(flowKey, flow);\r\n  //   }\r\n  // }, [reactFlowInstance]);\r\n\r\n  return (\r\n    <div class=\"flex-auto dndflow relative\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            className=\"bg-gray-900\"\r\n            defaultZoom={1.25}\r\n            defaultPosition={[250, 175]}\r\n          >\r\n            <MiniMap\r\n              nodeStrokeColor={(n) => {\r\n                if (n.style?.background) return n.style.background;\r\n                if (n.type === \"input\") return \"#F59E0B\";\r\n                if (n.type === \"output\") return \"#10B981\";\r\n                if (n.type === \"default\") return \"#818CF8\";\r\n\r\n                return \"#eee\";\r\n              }}\r\n              nodeColor={(n) => {\r\n                if (n.style?.background) return n.style.background;\r\n\r\n                return \"#fff\";\r\n              }}\r\n              nodeBorderRadius={2}\r\n            />\r\n            <Controls>\r\n              <div\r\n                className=\"react-flow__controls-button\"\r\n                onClick={handleTransform({ x: 0, y: 0, zoom: 1 })}\r\n              >\r\n                {enlargeSvg}\r\n              </div>\r\n            </Controls>\r\n            <Background color=\"#aaa\" gap={16} />\r\n          </ReactFlow>\r\n        </div>\r\n      </ReactFlowProvider>\r\n      <div className=\"absolute top-0 right-0\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"text-sm py-2 px-4 m-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md focus:outline-none z-10\"\r\n          tabindex=\"-1\"\r\n        >\r\n          Export Workflow\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowView;\r\n","import React from \"react\";\r\n\r\nconst SidebarItem = ({ title, type, ghType, subtitle }) => {\r\n  const onDragStart = (event, nodeType, ghType, subtitle) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n    event.dataTransfer.setData(\"application/ghtype\", ghType);\r\n    event.dataTransfer.setData(\"application/title\", title);\r\n    event.dataTransfer.setData(\"application/subtitle\", subtitle);\r\n  };\r\n\r\n  if (title && type && ghType && subtitle) {\r\n    return (\r\n      <li\r\n        class={`dndnode ${type}`}\r\n        onDragStart={(event) => onDragStart(event, type, ghType, subtitle)}\r\n        draggable\r\n      >\r\n        <div className=\"relative flex flex-row items-center pr-6 h-11 hover:text-gray-200 text-gray-500 hover:bg-gray-700 hover:border-blue-600 border-transparent focus:outline-none border-l-2 border-blue-900 rounded-lg ml-4 cursor-move shadow-md\">\r\n          <svg\r\n            width=\"20\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              class=\"fill-current text-gray-400\"\r\n              d=\"M15.5 17C16.3284 17 17 17.6716 17 18.5C17 19.3284 16.3284 20 15.5 20C14.6716 20 14 19.3284 14 18.5C14 17.6716 14.6716 17 15.5 17ZM8.5 17C9.32843 17 10 17.6716 10 18.5C10 19.3284 9.32843 20 8.5 20C7.67157 20 7 19.3284 7 18.5C7 17.6716 7.67157 17 8.5 17ZM15.5 10C16.3284 10 17 10.6716 17 11.5C17 12.3284 16.3284 13 15.5 13C14.6716 13 14 12.3284 14 11.5C14 10.6716 14.6716 10 15.5 10ZM8.5 10C9.32843 10 10 10.6716 10 11.5C10 12.3284 9.32843 13 8.5 13C7.67157 13 7 12.3284 7 11.5C7 10.6716 7.67157 10 8.5 10ZM15.5 3C16.3284 3 17 3.67157 17 4.5C17 5.32843 16.3284 6 15.5 6C14.6716 6 14 5.32843 14 4.5C14 3.67157 14.6716 3 15.5 3ZM8.5 3C9.32843 3 10 3.67157 10 4.5C10 5.32843 9.32843 6 8.5 6C7.67157 6 7 5.32843 7 4.5C7 3.67157 7.67157 3 8.5 3Z\"\r\n            />\r\n          </svg>\r\n          <span className=\"ml-6 font-sans text-sm font-semibold tracking-wide truncate\">\r\n            {title}\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SidebarItem;\r\n","import React from \"react\";\r\nimport SidebarItem from \"../components/SidebarItem\";\r\nimport {\r\n  eventSvg,\r\n  stepsSvg,\r\n  buildSvg,\r\n  deploySvg,\r\n} from \"../components/SvgAssets\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col max-h-screen bg-gray-800 shadow-lg custom-scrollbar\">\r\n        <div className=\"flex flex-col m-4 h-20 text-center h-auto\">\r\n          <h2 className=\"mb-4 text-left text-gray-200 font-sans text-xl font-bold tracking-wide\">\r\n            GitHub Workflow Builder\r\n          </h2>\r\n          <input\r\n            type=\"search\"\r\n            name=\"q\"\r\n            className=\"pl-10 py-2 text-gray-700 focus:text-gray-900 text-sm bg-gray-300 focus:bg-white rounded-md focus:outline-none\"\r\n            placeholder=\"Search...\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"flex-grow overflow-x-hidden overflow-y-auto\">\r\n          <ul className=\"flex flex-col py-6 space-y-1\">\r\n            <li className=\"px-4\">\r\n              <div className=\"flex flex-row items-center h-8\">\r\n                <div className=\"flex flex-row items-center justify-between my-4 w-full text-gray-300 font-sans text-sm font-semibold uppercase\">\r\n                  <p>Events</p>\r\n                  {eventSvg}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <SidebarItem\r\n              title=\"Pull Request\"\r\n              type=\"input\"\r\n              ghType=\"event\"\r\n              subtitle=\"When a new pull request targets the main branch\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Push\"\r\n              type=\"input\"\r\n              ghType=\"event\"\r\n              subtitle=\"When a new new commit is pushed\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Release\"\r\n              type=\"input\"\r\n              ghType=\"event\"\r\n              subtitle=\"When a new release is published\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Label\"\r\n              type=\"input\"\r\n              ghType=\"event\"\r\n              subtitle=\"When a new label is created\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Schedule\"\r\n              type=\"input\"\r\n              ghType=\"event\"\r\n              subtitle=\"When a cron job is triggered\"\r\n            />\r\n            <li className=\"px-4 pt-2\">\r\n              <div className=\"flex flex-row items-center h-8\">\r\n                <div className=\"flex flex-row items-center justify-between my-4 w-full text-gray-300 font-sans text-sm font-semibold uppercase\">\r\n                  Steps\r\n                  {stepsSvg}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <SidebarItem\r\n              title=\"Checkout Repository\"\r\n              type=\"default\"\r\n              ghType=\"step\"\r\n              subtitle=\"Checkout the git repository\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Install Dependencies\"\r\n              type=\"default\"\r\n              ghType=\"step\"\r\n              subtitle=\"Install project dependencies\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Lint\"\r\n              type=\"default\"\r\n              ghType=\"step\"\r\n              subtitle=\"Perform static analysis on codebase\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Test\"\r\n              type=\"default\"\r\n              ghType=\"step\"\r\n              subtitle=\"Run automated test suites\"\r\n            />\r\n            <li className=\"px-4 pt-2\">\r\n              <div className=\"flex flex-row items-center h-8\">\r\n                <div className=\"flex flex-row items-center justify-between my-4 w-full text-gray-300 font-sans text-sm font-semibold uppercase\">\r\n                  Build\r\n                  {buildSvg}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <SidebarItem\r\n              title=\"Make\"\r\n              type=\"default\"\r\n              ghType=\"build\"\r\n              subtitle=\"Build project using Make\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Node\"\r\n              type=\"default\"\r\n              ghType=\"build\"\r\n              subtitle=\"Build project using Node\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Jekyll\"\r\n              type=\"default\"\r\n              ghType=\"build\"\r\n              subtitle=\"Build project using Jekyll\"\r\n            />\r\n            <li className=\"px-4 pt-2\">\r\n              <div className=\"flex flex-row items-center h-8\">\r\n                <div className=\"flex flex-row items-center justify-between my-4 w-full text-gray-300 font-sans text-sm font-semibold uppercase\">\r\n                  <p>Deploy</p>\r\n                  {deploySvg}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <SidebarItem\r\n              title=\"GitHub Pages\"\r\n              type=\"output\"\r\n              ghType=\"deploy\"\r\n              subtitle=\"Deploy project to GitHub Pages\"\r\n            />\r\n            <SidebarItem\r\n              title=\"Firebase\"\r\n              type=\"output\"\r\n              ghType=\"deploy\"\r\n              subtitle=\"Deploy project to Firebase Hosting\"\r\n            />\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import FlowView from \"./components/FlowView\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"flex flex-row\">\r\n      <Sidebar />\r\n      {/* <div class=\"w-full min-h-screen\"> */}\r\n      <FlowView />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}